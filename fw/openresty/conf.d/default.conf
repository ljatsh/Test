server {
    listen 80;
    location / {
        default_type text/html;

        content_by_lua_block {
            ngx.say("HelloWorld")
        }
    }

    location = /sum {
        internal;
        content_by_lua_block {
            ngx.sleep(0.1)
            local args = ngx.req.get_uri_args()
            ngx.print(tonumber(args.a) + tonumber(args.b))
        }
    }

    location = /subduction {
        internal;
        content_by_lua_block {
            ngx.sleep(0.1)
            local args = ngx.req.get_uri_args()
            ngx.print(tonumber(args.a) - tonumber(args.b))
        }
    }

    location = /app/test_parallels {
        content_by_lua_block {
            local start_time = ngx.now()
            local res1, res2 = ngx.location.capture_multi( {
                            {"/sum", {args={a=3, b=8}}},
                            {"/subduction", {args={a=3, b=8}}}
                        })
            ngx.say("status:", res1.status, " response:", res1.body)
            ngx.say("status:", res2.status, " response:", res2.body)
            ngx.say("time used:", ngx.now() - start_time)
        }
    }

    location /app/test_queue {
        content_by_lua_block {
            local start_time = ngx.now()
            local res1 = ngx.location.capture_multi( {
                            {"/sum", {args={a=3, b=8}}}
                        })
            local res2 = ngx.location.capture_multi( {
                            {"/subduction", {args={a=3, b=8}}}
                        })
            ngx.say("status:", res1.status, " response:", res1.body)
            ngx.say("status:", res2.status, " response:", res2.body)
            ngx.say("time used:", ngx.now() - start_time)
        }
    }

    location = /print_param {
       content_by_lua_block {
           local arg = ngx.req.get_uri_args()
           for k,v in pairs(arg) do
               ngx.say("[GET ] key:", k, " v:", v)
           end

           ngx.req.read_body() -- 解析 body 参数之前一定要先读取 body
           local arg = ngx.req.get_post_args()
           for k,v in pairs(arg) do
               ngx.say("[POST] key:", k, " v:", v)
           end
       }
   }

   location /test {
       content_by_lua_block {
           local res = ngx.location.capture(
                    '/print_param',
                    {
                       method = ngx.HTTP_POST,
                       args = ngx.encode_args({a = 1, b = '2&'}),
                       body = ngx.encode_args({c = 3, d = '4&'})
                   }
                )
           ngx.say(res.body)
       }
   }
}
